{"version":3,"sources":["components/loader.js","components/message.js","App.js","serviceWorker.js","index.js"],"names":["FadeOutLoader","styled","div","_templateObject","props","invisible","Loader","react_default","a","createElement","Container","message_templateObject","background","TextArea","textarea","_templateObject2","emojified","Options","_templateObject3","reduced","OptionsButton","button","_templateObject4","color","EmojiHider","span","_templateObject5","inverted","EmojiContainer","_templateObject6","ShareContainer","_templateObject7","Colors","Message","message","match","params","_useState","useState","url","toString","replace","transformURLToText","_useState2","Object","slicedToArray","inputMessage","setValue","_useState3","Math","floor","random","length","_useState4","inputColor","_useState5","_useState6","showEmoji","setEmoji","_useState7","_useState8","showShare","setShare","handleEmoji","bool","handleShare","transformTextToURL","text","style","position","onClick","dist_es","onSelect","emoji","oldMessage","editedInputMessage","native","history","push","addEmoji","set","title","type","id","value","onChange","e","target","className","WhatsappShareButton","WhatsappIcon","size","round","Wrapper","App_templateObject","visible","App","hasLoaded","setLoaded","useEffect","setTimeout","react_router_dom","react_router","render","_ref","location","name","path","component","Boolean","window","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9676ebfa.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst FadeOutLoader = styled.div`\n  opacity: ${props => (props.invisible ? \"0\" : \"1\")};\n  transition: ${props => (props.invisible ? \"opacity .2s ease-in\" : \"none\")};\n  width: 300px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate3d(-50%, -50%, 0);\n`;\n\nexport default function Loader(props) {\n  return (\n    <FadeOutLoader invisible={props.invisible}>\n      <p>loading...</p>\n    </FadeOutLoader>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { Picker } from \"emoji-mart\";\nimport styled from \"styled-components\";\n\nimport {\n  WhatsappShareButton,\n  WhatsappIcon,\n} from \"react-share\";\n\nconst Container = styled.div`\n  width: 100%;\n  background-color: ${props => props.background || \"#3f51b5\"};\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst TextArea = styled.textarea`\n  width: ${props => (props.emojified ? \"85%\" : \"100%\")};\n  font-size: 6rem;\n  font-weight: bold;\n  height: 100%;\n  background-color: transparent;\n  text-align: center;\n  white-space: normal;\n  overflow: visible;\n  resize: none;\n  vertical-align: middle;\n  padding: 5% 15%;\n  box-sizing: border-box;\n  border: 0;\n  margin: 0;\n  &:focus {\n    border: none;\n    outline: none;\n  }\n`;\n\nconst Options = styled.div`\n  position: absolute;\n  bottom: 0;\n  min-height: 30px;\n  display: flex;\n  justify-content: space-around;\n  right: 0;\n  width: ${props => (props.reduced ? \"85%\" : \"100%\")};\n`;\n\nconst OptionsButton = styled.button`\n  cursor: pointer;\n  padding: 6px 10px 8px 10px;\n  background-color: white;\n  color: ${props => props.color || \"#3f51b5\"};\n  border-radius: 10px;\n  font-weight: bold;\n  transition: 0.4s ease all;\n  border: none;\n  margin-bottom: 15px;\n  outline: none;\n  :hover {\n    text-decoration: underline;\n  }\n`;\n\nconst EmojiHider = styled.span`\n  color: ${props => props.color || \"#3f51b5\"};\n  position: absolute;\n  right: ${props => (props.inverted ? \"unset\" : \"-45px\")};\n  left: ${props => (props.inverted ? \"-45px\" : \"unset\")};\n  font-size: 23px;\n  font-weight: bold;\n  background-color: white;\n  border-radius: 100%;\n  top: 12px;\n  width: 31px;\n  height: 31px;\n  padding: 2px 0 0 1px;\n  box-sizing: border-box;\n  cursor: pointer;\n`;\n\nconst EmojiContainer = styled.div`\n  .emoji-mart {\n    width: 15%;\n    left: 0;\n    height: 100vh;\n    top: 0;\n    position: relative;\n    border: 0;\n    border-radius: 0;\n  }\n  .emoji-mart-category-label {\n    margin-bottom: 4px;\n  }\n  .emoji-mart-scroll {\n    height: 83%;\n  }\n`;\n\nconst ShareContainer = styled.div`\n  padding: 20px;\n  background-color: white;\n  position: relative;\n  width: 8%;\n  height: 100%;\n  box-sizing: border-box;\n  right: 0;\n`;\n\nconst Colors = [\n  \"#f44336\",\n  \"#e91e63\",\n  \"#9c27b0\",\n  \"#673ab7\",\n  \"#3f51b5\",\n  \"#2196f3\",\n  \"#03a9f4\",\n  \"#00bcd4\",\n  \"#009688\",\n  \"#4caf50\",\n  \"#8bc34a\",\n  \"#cddc39\",\n  \"#ffeb3b\",\n  \"#ffc107\",\n  \"#ff9800\",\n  \"#ff5722\",\n  \"#607d8b\"\n];\n\nexport default function Message(props) {\n  const { message } = props.match.params;\n\n  const [inputMessage, setValue] = useState(transformURLToText(message));\n  const [inputColor, setColor] = useState(\n    Colors[Math.floor(Math.random() * Colors.length)]\n  );\n  const [showEmoji, setEmoji] = useState(false);\n  const [showShare, setShare] = useState(false);\n\n  function handleEmoji(bool) {\n    setEmoji(bool);\n  }\n\n  function handleShare(bool) {\n    setShare(bool);\n  }\n\n  function transformURLToText(url) {\n    if (message) {\n      return url\n        .toString()\n        .replace(/\\+/g, \" \")\n        .replace(/–/g, \"\\n\")\n        .replace(/¿/g, \"?\")\n        .replace(/hashtag-/g, \"#\")\n        .replace(/percent-/g, \"%\");\n    } else {\n      var defaultMessage = \"Write your message\";\n      return defaultMessage;\n    }\n  }\n\n  function transformTextToURL(text) {\n    return text\n      .toString()\n      .replace(/ /g, \"+\")\n      .replace(/\\n/g, \"–\")\n      .replace(/\\?/g, \"¿\")\n      .replace(/\\//g, \"\")\n      .replace(/%/g, \"percent-\")\n      .replace(/#/g, \"hashtag-\");\n  }\n\n  function updateInputMessage(e) {\n    setValue(e.target.value);\n    props.history.push(transformTextToURL(e.target.value));\n  }\n\n  function cleanMessage() {\n    if (inputMessage === \"Write your message\") {\n      setValue(\"\");\n    }\n  }\n\n  function addEmoji(emoji) {\n    var oldMessage = inputMessage;\n    var editedInputMessage = (oldMessage += emoji.native);\n    setValue(editedInputMessage);\n    props.history.push(transformTextToURL(editedInputMessage));\n  }\n\n  return (\n    <Container background={inputColor}>\n      {showEmoji ? (\n        <div style={{ position: \"relative\" }}>\n          <EmojiHider color={inputColor} onClick={() => handleEmoji(false)}>\n            ✗\n          </EmojiHider>\n          <EmojiContainer>\n            <Picker\n              onSelect={emoji => addEmoji(emoji)}\n              set=\"apple\"\n              title=\"Pick your emoji…\"\n              emoji=\"star-struck\"\n            />\n          </EmojiContainer>\n        </div>\n      ) : null}\n      <TextArea\n        emojified={showEmoji}\n        type=\"text\"\n        id=\"inputArea\"\n        value={inputMessage}\n        onChange={updateInputMessage}\n        onClick={cleanMessage}\n      />\n      {showShare ? (\n        <ShareContainer>\n          <EmojiHider\n            inverted\n            color={inputColor}\n            onClick={() => handleShare(false)}\n          >\n            ✗\n          </EmojiHider>\n          <div className=\"Demo__some-network\">\n            <WhatsappShareButton\n              url={\"localhost:3000/\" + transformTextToURL(inputMessage)}\n              className=\"Demo__some-network__share-button\"\n            >\n              <WhatsappIcon size={52} round />\n            </WhatsappShareButton>\n          </div>\n        </ShareContainer>\n      ) : null}\n      <Options reduced={showEmoji}>\n        {showEmoji ? null : (\n          <OptionsButton color={inputColor} onClick={() => handleEmoji(true)}>\n            add emoji\n          </OptionsButton>\n        )}\n        {showShare ? null : (\n          <OptionsButton color={inputColor} onClick={() => handleShare(true)}>\n            share\n          </OptionsButton>\n        )}\n      </Options>\n    </Container>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Loader from \"./components/loader\";\nimport Message from \"./components/message\";\nimport styled from \"styled-components\";\n\n//Loader\nconst Wrapper = styled.div`\n  opacity: ${props => (props.visible ? \"1\" : \"0\")};\n  transition: opacity .3s ease-in;\n  display: flex;\n  justify-content: center;\n  width: 100vw;\n  height: 100vh;\n`\n\nfunction App() {\n  const [hasLoaded, setLoaded] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setLoaded(true);\n    }, 500);\n  });\n\n  return (\n    <div className=\"App\">\n      <Loader invisible={hasLoaded} />\n      <Wrapper visible={hasLoaded}>\n        <Router>\n          <Route\n            render={({ location }) => {\n              return (\n                <Switch location={location}>\n                  <Route name=\"home\" path=\"/:message?\" component={Message} />\n                </Switch>\n              );\n            }}\n          />\n        </Router>\n      </Wrapper>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}